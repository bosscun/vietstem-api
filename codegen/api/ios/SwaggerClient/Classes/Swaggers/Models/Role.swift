//
// Role.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class Role: Codable {

    public var id: Double?
    public var name: String
    public var description: String?
    public var created: Date?
    public var modified: Date?


    
    public init(id: Double? = nil, name: String, description: String? = nil, created: Date? = nil, modified: Date? = nil) {
        self.id = id
        self.name = name
        self.description = description
        self.created = created
        self.modified = modified
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(id, forKey: "id")
        try container.encode(name, forKey: "name")
        try container.encodeIfPresent(description, forKey: "description")
        try container.encodeIfPresent(created, forKey: "created")
        try container.encodeIfPresent(modified, forKey: "modified")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        id = try container.decodeIfPresent(Double.self, forKey: "id")
        name = try container.decode(String.self, forKey: "name")
        description = try container.decodeIfPresent(String.self, forKey: "description")
        created = try container.decodeIfPresent(Date.self, forKey: "created")
        modified = try container.decodeIfPresent(Date.self, forKey: "modified")
    }
}

