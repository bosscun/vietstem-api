//
// Submissions.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class Submissions: Codable {

    public var groupName: String?
    public var teacher: String?
    public var _class: String?
    public var phone: Double?
    public var city: String?
    public var district: String?
    public var school: String?
    public var id: Double?
    public var createdAt: Date?
    public var updatedAt: Date?


    
    public init(groupName: String? = nil, teacher: String? = nil, _class: String? = nil, phone: Double? = nil, city: String? = nil, district: String? = nil, school: String? = nil, id: Double? = nil, createdAt: Date? = nil, updatedAt: Date? = nil) {
        self.groupName = groupName
        self.teacher = teacher
        self._class = _class
        self.phone = phone
        self.city = city
        self.district = district
        self.school = school
        self.id = id
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(groupName, forKey: "groupName")
        try container.encodeIfPresent(teacher, forKey: "teacher")
        try container.encodeIfPresent(_class, forKey: "class")
        try container.encodeIfPresent(phone, forKey: "phone")
        try container.encodeIfPresent(city, forKey: "city")
        try container.encodeIfPresent(district, forKey: "district")
        try container.encodeIfPresent(school, forKey: "school")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(createdAt, forKey: "createdAt")
        try container.encodeIfPresent(updatedAt, forKey: "updatedAt")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        groupName = try container.decodeIfPresent(String.self, forKey: "groupName")
        teacher = try container.decodeIfPresent(String.self, forKey: "teacher")
        _class = try container.decodeIfPresent(String.self, forKey: "class")
        phone = try container.decodeIfPresent(Double.self, forKey: "phone")
        city = try container.decodeIfPresent(String.self, forKey: "city")
        district = try container.decodeIfPresent(String.self, forKey: "district")
        school = try container.decodeIfPresent(String.self, forKey: "school")
        id = try container.decodeIfPresent(Double.self, forKey: "id")
        createdAt = try container.decodeIfPresent(Date.self, forKey: "createdAt")
        updatedAt = try container.decodeIfPresent(Date.self, forKey: "updatedAt")
    }
}

