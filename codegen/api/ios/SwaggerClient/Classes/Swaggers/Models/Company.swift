//
// Company.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class Company: Codable {

    public var name: String?
    public var email: String?
    public var phone: String?
    public var address: String?
    public var level: String?
    public var director: String?
    public var status: String?
    public var id: Double?
    public var createdAt: Date?
    public var updatedAt: Date?


    
    public init(name: String? = nil, email: String? = nil, phone: String? = nil, address: String? = nil, level: String? = nil, director: String? = nil, status: String? = nil, id: Double? = nil, createdAt: Date? = nil, updatedAt: Date? = nil) {
        self.name = name
        self.email = email
        self.phone = phone
        self.address = address
        self.level = level
        self.director = director
        self.status = status
        self.id = id
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(email, forKey: "email")
        try container.encodeIfPresent(phone, forKey: "phone")
        try container.encodeIfPresent(address, forKey: "address")
        try container.encodeIfPresent(level, forKey: "level")
        try container.encodeIfPresent(director, forKey: "director")
        try container.encodeIfPresent(status, forKey: "status")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(createdAt, forKey: "createdAt")
        try container.encodeIfPresent(updatedAt, forKey: "updatedAt")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        name = try container.decodeIfPresent(String.self, forKey: "name")
        email = try container.decodeIfPresent(String.self, forKey: "email")
        phone = try container.decodeIfPresent(String.self, forKey: "phone")
        address = try container.decodeIfPresent(String.self, forKey: "address")
        level = try container.decodeIfPresent(String.self, forKey: "level")
        director = try container.decodeIfPresent(String.self, forKey: "director")
        status = try container.decodeIfPresent(String.self, forKey: "status")
        id = try container.decodeIfPresent(Double.self, forKey: "id")
        createdAt = try container.decodeIfPresent(Date.self, forKey: "createdAt")
        updatedAt = try container.decodeIfPresent(Date.self, forKey: "updatedAt")
    }
}

