//
// RoleMapping.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Map principals to roles */

open class RoleMapping: Codable {

    public var id: Double?
    /** The principal type, such as USER, APPLICATION, ROLE, or user model name in case of multiple user models */
    public var principalType: String?
    public var principalId: String?
    public var roleId: Double?


    
    public init(id: Double? = nil, principalType: String? = nil, principalId: String? = nil, roleId: Double? = nil) {
        self.id = id
        self.principalType = principalType
        self.principalId = principalId
        self.roleId = roleId
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(principalType, forKey: "principalType")
        try container.encodeIfPresent(principalId, forKey: "principalId")
        try container.encodeIfPresent(roleId, forKey: "roleId")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        id = try container.decodeIfPresent(Double.self, forKey: "id")
        principalType = try container.decodeIfPresent(String.self, forKey: "principalType")
        principalId = try container.decodeIfPresent(String.self, forKey: "principalId")
        roleId = try container.decodeIfPresent(Double.self, forKey: "roleId")
    }
}

