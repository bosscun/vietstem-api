/*
 * drfrank
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Map principals to roles
 */
@ApiModel(description = "Map principals to roles")

public class RoleMapping {
  @SerializedName("id")
  private Double id = null;

  @SerializedName("principalType")
  private String principalType = null;

  @SerializedName("principalId")
  private String principalId = null;

  @SerializedName("roleId")
  private Double roleId = null;

  public RoleMapping id(Double id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Double getId() {
    return id;
  }

  public void setId(Double id) {
    this.id = id;
  }

  public RoleMapping principalType(String principalType) {
    this.principalType = principalType;
    return this;
  }

   /**
   * The principal type, such as USER, APPLICATION, ROLE, or user model name in case of multiple user models
   * @return principalType
  **/
  @ApiModelProperty(value = "The principal type, such as USER, APPLICATION, ROLE, or user model name in case of multiple user models")
  public String getPrincipalType() {
    return principalType;
  }

  public void setPrincipalType(String principalType) {
    this.principalType = principalType;
  }

  public RoleMapping principalId(String principalId) {
    this.principalId = principalId;
    return this;
  }

   /**
   * Get principalId
   * @return principalId
  **/
  @ApiModelProperty(value = "")
  public String getPrincipalId() {
    return principalId;
  }

  public void setPrincipalId(String principalId) {
    this.principalId = principalId;
  }

  public RoleMapping roleId(Double roleId) {
    this.roleId = roleId;
    return this;
  }

   /**
   * Get roleId
   * @return roleId
  **/
  @ApiModelProperty(value = "")
  public Double getRoleId() {
    return roleId;
  }

  public void setRoleId(Double roleId) {
    this.roleId = roleId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoleMapping roleMapping = (RoleMapping) o;
    return Objects.equals(this.id, roleMapping.id) &&
        Objects.equals(this.principalType, roleMapping.principalType) &&
        Objects.equals(this.principalId, roleMapping.principalId) &&
        Objects.equals(this.roleId, roleMapping.roleId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, principalType, principalId, roleId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoleMapping {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    principalType: ").append(toIndentedString(principalType)).append("\n");
    sb.append("    principalId: ").append(toIndentedString(principalId)).append("\n");
    sb.append("    roleId: ").append(toIndentedString(roleId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

