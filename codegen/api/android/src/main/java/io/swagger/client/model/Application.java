/*
 * drfrank
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.XAny;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Application
 */

public class Application {
  @SerializedName("id")
  private String id = null;

  @SerializedName("realm")
  private String realm = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("icon")
  private String icon = null;

  @SerializedName("owner")
  private String owner = null;

  @SerializedName("collaborators")
  private List<String> collaborators = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("emailVerified")
  private Boolean emailVerified = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("callbackUrls")
  private List<String> callbackUrls = null;

  @SerializedName("permissions")
  private List<String> permissions = null;

  @SerializedName("clientKey")
  private String clientKey = null;

  @SerializedName("javaScriptKey")
  private String javaScriptKey = null;

  @SerializedName("restApiKey")
  private String restApiKey = null;

  @SerializedName("windowsKey")
  private String windowsKey = null;

  @SerializedName("masterKey")
  private String masterKey = null;

  @SerializedName("pushSettings")
  private XAny pushSettings = null;

  @SerializedName("authenticationEnabled")
  private Boolean authenticationEnabled = true;

  @SerializedName("anonymousAllowed")
  private Boolean anonymousAllowed = true;

  @SerializedName("authenticationSchemes")
  private List<XAny> authenticationSchemes = null;

  @SerializedName("status")
  private String status = "sandbox";

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("modified")
  private OffsetDateTime modified = null;

  public Application id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Application realm(String realm) {
    this.realm = realm;
    return this;
  }

   /**
   * Get realm
   * @return realm
  **/
  @ApiModelProperty(value = "")
  public String getRealm() {
    return realm;
  }

  public void setRealm(String realm) {
    this.realm = realm;
  }

  public Application name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Application description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Application icon(String icon) {
    this.icon = icon;
    return this;
  }

   /**
   * The icon image url
   * @return icon
  **/
  @ApiModelProperty(value = "The icon image url")
  public String getIcon() {
    return icon;
  }

  public void setIcon(String icon) {
    this.icon = icon;
  }

  public Application owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * The user id of the developer who registers the application
   * @return owner
  **/
  @ApiModelProperty(value = "The user id of the developer who registers the application")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public Application collaborators(List<String> collaborators) {
    this.collaborators = collaborators;
    return this;
  }

  public Application addCollaboratorsItem(String collaboratorsItem) {
    if (this.collaborators == null) {
      this.collaborators = new ArrayList<String>();
    }
    this.collaborators.add(collaboratorsItem);
    return this;
  }

   /**
   * A list of users ids who have permissions to work on this app
   * @return collaborators
  **/
  @ApiModelProperty(value = "A list of users ids who have permissions to work on this app")
  public List<String> getCollaborators() {
    return collaborators;
  }

  public void setCollaborators(List<String> collaborators) {
    this.collaborators = collaborators;
  }

  public Application email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Application emailVerified(Boolean emailVerified) {
    this.emailVerified = emailVerified;
    return this;
  }

   /**
   * Get emailVerified
   * @return emailVerified
  **/
  @ApiModelProperty(value = "")
  public Boolean isEmailVerified() {
    return emailVerified;
  }

  public void setEmailVerified(Boolean emailVerified) {
    this.emailVerified = emailVerified;
  }

  public Application url(String url) {
    this.url = url;
    return this;
  }

   /**
   * The application URL for OAuth 2.0
   * @return url
  **/
  @ApiModelProperty(value = "The application URL for OAuth 2.0")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public Application callbackUrls(List<String> callbackUrls) {
    this.callbackUrls = callbackUrls;
    return this;
  }

  public Application addCallbackUrlsItem(String callbackUrlsItem) {
    if (this.callbackUrls == null) {
      this.callbackUrls = new ArrayList<String>();
    }
    this.callbackUrls.add(callbackUrlsItem);
    return this;
  }

   /**
   * OAuth 2.0 code/token callback URLs
   * @return callbackUrls
  **/
  @ApiModelProperty(value = "OAuth 2.0 code/token callback URLs")
  public List<String> getCallbackUrls() {
    return callbackUrls;
  }

  public void setCallbackUrls(List<String> callbackUrls) {
    this.callbackUrls = callbackUrls;
  }

  public Application permissions(List<String> permissions) {
    this.permissions = permissions;
    return this;
  }

  public Application addPermissionsItem(String permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<String>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * A list of permissions required by the application
   * @return permissions
  **/
  @ApiModelProperty(value = "A list of permissions required by the application")
  public List<String> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<String> permissions) {
    this.permissions = permissions;
  }

  public Application clientKey(String clientKey) {
    this.clientKey = clientKey;
    return this;
  }

   /**
   * Get clientKey
   * @return clientKey
  **/
  @ApiModelProperty(value = "")
  public String getClientKey() {
    return clientKey;
  }

  public void setClientKey(String clientKey) {
    this.clientKey = clientKey;
  }

  public Application javaScriptKey(String javaScriptKey) {
    this.javaScriptKey = javaScriptKey;
    return this;
  }

   /**
   * Get javaScriptKey
   * @return javaScriptKey
  **/
  @ApiModelProperty(value = "")
  public String getJavaScriptKey() {
    return javaScriptKey;
  }

  public void setJavaScriptKey(String javaScriptKey) {
    this.javaScriptKey = javaScriptKey;
  }

  public Application restApiKey(String restApiKey) {
    this.restApiKey = restApiKey;
    return this;
  }

   /**
   * Get restApiKey
   * @return restApiKey
  **/
  @ApiModelProperty(value = "")
  public String getRestApiKey() {
    return restApiKey;
  }

  public void setRestApiKey(String restApiKey) {
    this.restApiKey = restApiKey;
  }

  public Application windowsKey(String windowsKey) {
    this.windowsKey = windowsKey;
    return this;
  }

   /**
   * Get windowsKey
   * @return windowsKey
  **/
  @ApiModelProperty(value = "")
  public String getWindowsKey() {
    return windowsKey;
  }

  public void setWindowsKey(String windowsKey) {
    this.windowsKey = windowsKey;
  }

  public Application masterKey(String masterKey) {
    this.masterKey = masterKey;
    return this;
  }

   /**
   * Get masterKey
   * @return masterKey
  **/
  @ApiModelProperty(value = "")
  public String getMasterKey() {
    return masterKey;
  }

  public void setMasterKey(String masterKey) {
    this.masterKey = masterKey;
  }

  public Application pushSettings(XAny pushSettings) {
    this.pushSettings = pushSettings;
    return this;
  }

   /**
   * Get pushSettings
   * @return pushSettings
  **/
  @ApiModelProperty(value = "")
  public XAny getPushSettings() {
    return pushSettings;
  }

  public void setPushSettings(XAny pushSettings) {
    this.pushSettings = pushSettings;
  }

  public Application authenticationEnabled(Boolean authenticationEnabled) {
    this.authenticationEnabled = authenticationEnabled;
    return this;
  }

   /**
   * Get authenticationEnabled
   * @return authenticationEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isAuthenticationEnabled() {
    return authenticationEnabled;
  }

  public void setAuthenticationEnabled(Boolean authenticationEnabled) {
    this.authenticationEnabled = authenticationEnabled;
  }

  public Application anonymousAllowed(Boolean anonymousAllowed) {
    this.anonymousAllowed = anonymousAllowed;
    return this;
  }

   /**
   * Get anonymousAllowed
   * @return anonymousAllowed
  **/
  @ApiModelProperty(value = "")
  public Boolean isAnonymousAllowed() {
    return anonymousAllowed;
  }

  public void setAnonymousAllowed(Boolean anonymousAllowed) {
    this.anonymousAllowed = anonymousAllowed;
  }

  public Application authenticationSchemes(List<XAny> authenticationSchemes) {
    this.authenticationSchemes = authenticationSchemes;
    return this;
  }

  public Application addAuthenticationSchemesItem(XAny authenticationSchemesItem) {
    if (this.authenticationSchemes == null) {
      this.authenticationSchemes = new ArrayList<XAny>();
    }
    this.authenticationSchemes.add(authenticationSchemesItem);
    return this;
  }

   /**
   * Get authenticationSchemes
   * @return authenticationSchemes
  **/
  @ApiModelProperty(value = "")
  public List<XAny> getAuthenticationSchemes() {
    return authenticationSchemes;
  }

  public void setAuthenticationSchemes(List<XAny> authenticationSchemes) {
    this.authenticationSchemes = authenticationSchemes;
  }

  public Application status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the application, production/sandbox/disabled
   * @return status
  **/
  @ApiModelProperty(value = "Status of the application, production/sandbox/disabled")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Application created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public Application modified(OffsetDateTime modified) {
    this.modified = modified;
    return this;
  }

   /**
   * Get modified
   * @return modified
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getModified() {
    return modified;
  }

  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Application application = (Application) o;
    return Objects.equals(this.id, application.id) &&
        Objects.equals(this.realm, application.realm) &&
        Objects.equals(this.name, application.name) &&
        Objects.equals(this.description, application.description) &&
        Objects.equals(this.icon, application.icon) &&
        Objects.equals(this.owner, application.owner) &&
        Objects.equals(this.collaborators, application.collaborators) &&
        Objects.equals(this.email, application.email) &&
        Objects.equals(this.emailVerified, application.emailVerified) &&
        Objects.equals(this.url, application.url) &&
        Objects.equals(this.callbackUrls, application.callbackUrls) &&
        Objects.equals(this.permissions, application.permissions) &&
        Objects.equals(this.clientKey, application.clientKey) &&
        Objects.equals(this.javaScriptKey, application.javaScriptKey) &&
        Objects.equals(this.restApiKey, application.restApiKey) &&
        Objects.equals(this.windowsKey, application.windowsKey) &&
        Objects.equals(this.masterKey, application.masterKey) &&
        Objects.equals(this.pushSettings, application.pushSettings) &&
        Objects.equals(this.authenticationEnabled, application.authenticationEnabled) &&
        Objects.equals(this.anonymousAllowed, application.anonymousAllowed) &&
        Objects.equals(this.authenticationSchemes, application.authenticationSchemes) &&
        Objects.equals(this.status, application.status) &&
        Objects.equals(this.created, application.created) &&
        Objects.equals(this.modified, application.modified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, realm, name, description, icon, owner, collaborators, email, emailVerified, url, callbackUrls, permissions, clientKey, javaScriptKey, restApiKey, windowsKey, masterKey, pushSettings, authenticationEnabled, anonymousAllowed, authenticationSchemes, status, created, modified);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Application {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    realm: ").append(toIndentedString(realm)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    collaborators: ").append(toIndentedString(collaborators)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailVerified: ").append(toIndentedString(emailVerified)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    callbackUrls: ").append(toIndentedString(callbackUrls)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    clientKey: ").append(toIndentedString(clientKey)).append("\n");
    sb.append("    javaScriptKey: ").append(toIndentedString(javaScriptKey)).append("\n");
    sb.append("    restApiKey: ").append(toIndentedString(restApiKey)).append("\n");
    sb.append("    windowsKey: ").append(toIndentedString(windowsKey)).append("\n");
    sb.append("    masterKey: ").append(toIndentedString(masterKey)).append("\n");
    sb.append("    pushSettings: ").append(toIndentedString(pushSettings)).append("\n");
    sb.append("    authenticationEnabled: ").append(toIndentedString(authenticationEnabled)).append("\n");
    sb.append("    anonymousAllowed: ").append(toIndentedString(anonymousAllowed)).append("\n");
    sb.append("    authenticationSchemes: ").append(toIndentedString(authenticationSchemes)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

