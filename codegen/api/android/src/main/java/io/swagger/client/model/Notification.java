/*
 * drfrank
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.XAny;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * Notification
 */

public class Notification {
  @SerializedName("alert")
  private XAny alert = null;

  @SerializedName("badge")
  private Double badge = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("collapseKey")
  private String collapseKey = null;

  @SerializedName("contentAvailable")
  private Boolean contentAvailable = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("delayWhileIdle")
  private Boolean delayWhileIdle = null;

  @SerializedName("deviceToken")
  private String deviceToken = null;

  @SerializedName("deviceType")
  private String deviceType = null;

  @SerializedName("expirationInterval")
  private Double expirationInterval = null;

  @SerializedName("expirationTime")
  private OffsetDateTime expirationTime = null;

  @SerializedName("modified")
  private OffsetDateTime modified = null;

  @SerializedName("scheduledTime")
  private OffsetDateTime scheduledTime = null;

  @SerializedName("sound")
  private String sound = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("urlArgs")
  private List<String> urlArgs = null;

  @SerializedName("id")
  private Double id = null;

  public Notification alert(XAny alert) {
    this.alert = alert;
    return this;
  }

   /**
   * Get alert
   * @return alert
  **/
  @ApiModelProperty(value = "")
  public XAny getAlert() {
    return alert;
  }

  public void setAlert(XAny alert) {
    this.alert = alert;
  }

  public Notification badge(Double badge) {
    this.badge = badge;
    return this;
  }

   /**
   * Get badge
   * @return badge
  **/
  @ApiModelProperty(value = "")
  public Double getBadge() {
    return badge;
  }

  public void setBadge(Double badge) {
    this.badge = badge;
  }

  public Notification category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(value = "")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public Notification collapseKey(String collapseKey) {
    this.collapseKey = collapseKey;
    return this;
  }

   /**
   * Get collapseKey
   * @return collapseKey
  **/
  @ApiModelProperty(value = "")
  public String getCollapseKey() {
    return collapseKey;
  }

  public void setCollapseKey(String collapseKey) {
    this.collapseKey = collapseKey;
  }

  public Notification contentAvailable(Boolean contentAvailable) {
    this.contentAvailable = contentAvailable;
    return this;
  }

   /**
   * Get contentAvailable
   * @return contentAvailable
  **/
  @ApiModelProperty(value = "")
  public Boolean isContentAvailable() {
    return contentAvailable;
  }

  public void setContentAvailable(Boolean contentAvailable) {
    this.contentAvailable = contentAvailable;
  }

  public Notification created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public Notification delayWhileIdle(Boolean delayWhileIdle) {
    this.delayWhileIdle = delayWhileIdle;
    return this;
  }

   /**
   * Get delayWhileIdle
   * @return delayWhileIdle
  **/
  @ApiModelProperty(value = "")
  public Boolean isDelayWhileIdle() {
    return delayWhileIdle;
  }

  public void setDelayWhileIdle(Boolean delayWhileIdle) {
    this.delayWhileIdle = delayWhileIdle;
  }

  public Notification deviceToken(String deviceToken) {
    this.deviceToken = deviceToken;
    return this;
  }

   /**
   * Get deviceToken
   * @return deviceToken
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDeviceToken() {
    return deviceToken;
  }

  public void setDeviceToken(String deviceToken) {
    this.deviceToken = deviceToken;
  }

  public Notification deviceType(String deviceType) {
    this.deviceType = deviceType;
    return this;
  }

   /**
   * Get deviceType
   * @return deviceType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDeviceType() {
    return deviceType;
  }

  public void setDeviceType(String deviceType) {
    this.deviceType = deviceType;
  }

  public Notification expirationInterval(Double expirationInterval) {
    this.expirationInterval = expirationInterval;
    return this;
  }

   /**
   * Get expirationInterval
   * @return expirationInterval
  **/
  @ApiModelProperty(value = "")
  public Double getExpirationInterval() {
    return expirationInterval;
  }

  public void setExpirationInterval(Double expirationInterval) {
    this.expirationInterval = expirationInterval;
  }

  public Notification expirationTime(OffsetDateTime expirationTime) {
    this.expirationTime = expirationTime;
    return this;
  }

   /**
   * Get expirationTime
   * @return expirationTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getExpirationTime() {
    return expirationTime;
  }

  public void setExpirationTime(OffsetDateTime expirationTime) {
    this.expirationTime = expirationTime;
  }

  public Notification modified(OffsetDateTime modified) {
    this.modified = modified;
    return this;
  }

   /**
   * Get modified
   * @return modified
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getModified() {
    return modified;
  }

  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }

  public Notification scheduledTime(OffsetDateTime scheduledTime) {
    this.scheduledTime = scheduledTime;
    return this;
  }

   /**
   * Get scheduledTime
   * @return scheduledTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getScheduledTime() {
    return scheduledTime;
  }

  public void setScheduledTime(OffsetDateTime scheduledTime) {
    this.scheduledTime = scheduledTime;
  }

  public Notification sound(String sound) {
    this.sound = sound;
    return this;
  }

   /**
   * Get sound
   * @return sound
  **/
  @ApiModelProperty(value = "")
  public String getSound() {
    return sound;
  }

  public void setSound(String sound) {
    this.sound = sound;
  }

  public Notification status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Notification urlArgs(List<String> urlArgs) {
    this.urlArgs = urlArgs;
    return this;
  }

  public Notification addUrlArgsItem(String urlArgsItem) {
    if (this.urlArgs == null) {
      this.urlArgs = new ArrayList<String>();
    }
    this.urlArgs.add(urlArgsItem);
    return this;
  }

   /**
   * Get urlArgs
   * @return urlArgs
  **/
  @ApiModelProperty(value = "")
  public List<String> getUrlArgs() {
    return urlArgs;
  }

  public void setUrlArgs(List<String> urlArgs) {
    this.urlArgs = urlArgs;
  }

  public Notification id(Double id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Double getId() {
    return id;
  }

  public void setId(Double id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Notification notification = (Notification) o;
    return Objects.equals(this.alert, notification.alert) &&
        Objects.equals(this.badge, notification.badge) &&
        Objects.equals(this.category, notification.category) &&
        Objects.equals(this.collapseKey, notification.collapseKey) &&
        Objects.equals(this.contentAvailable, notification.contentAvailable) &&
        Objects.equals(this.created, notification.created) &&
        Objects.equals(this.delayWhileIdle, notification.delayWhileIdle) &&
        Objects.equals(this.deviceToken, notification.deviceToken) &&
        Objects.equals(this.deviceType, notification.deviceType) &&
        Objects.equals(this.expirationInterval, notification.expirationInterval) &&
        Objects.equals(this.expirationTime, notification.expirationTime) &&
        Objects.equals(this.modified, notification.modified) &&
        Objects.equals(this.scheduledTime, notification.scheduledTime) &&
        Objects.equals(this.sound, notification.sound) &&
        Objects.equals(this.status, notification.status) &&
        Objects.equals(this.urlArgs, notification.urlArgs) &&
        Objects.equals(this.id, notification.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alert, badge, category, collapseKey, contentAvailable, created, delayWhileIdle, deviceToken, deviceType, expirationInterval, expirationTime, modified, scheduledTime, sound, status, urlArgs, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Notification {\n");
    
    sb.append("    alert: ").append(toIndentedString(alert)).append("\n");
    sb.append("    badge: ").append(toIndentedString(badge)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    collapseKey: ").append(toIndentedString(collapseKey)).append("\n");
    sb.append("    contentAvailable: ").append(toIndentedString(contentAvailable)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    delayWhileIdle: ").append(toIndentedString(delayWhileIdle)).append("\n");
    sb.append("    deviceToken: ").append(toIndentedString(deviceToken)).append("\n");
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    expirationInterval: ").append(toIndentedString(expirationInterval)).append("\n");
    sb.append("    expirationTime: ").append(toIndentedString(expirationTime)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    scheduledTime: ").append(toIndentedString(scheduledTime)).append("\n");
    sb.append("    sound: ").append(toIndentedString(sound)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    urlArgs: ").append(toIndentedString(urlArgs)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

